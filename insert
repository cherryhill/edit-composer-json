#!/usr/bin/env bash
# shellcheck shell=bash
set -e -o pipefail

# Check if jq is installed
if ! command -v jq >/dev/null 2>&1; then
    echo "Error: jq is required but not installed."
    exit 1
fi

# Path to composer.json (default to current directory)
: "${COMPOSER_JSON:=composer.json}"

# Check if composer.json exists
if [ ! -f "$COMPOSER_JSON" ]; then
    echo "Error: $COMPOSER_JSON not found"
    exit 1
fi

# Function to add a repository
add_repository() {
    local url="$1"
    jq --arg url "$url" '.repositories += [{"type": "github", "url": $url}]' "$COMPOSER_JSON" > "$COMPOSER_JSON.tmp"
    mv "$COMPOSER_JSON.tmp" "$COMPOSER_JSON"
}

# Function to add a script
add_script() {
    local name="$1"
    local command="$2"
    jq --arg name "$name" --arg cmd "$command" '.scripts[$name] = $cmd' "$COMPOSER_JSON" > "$COMPOSER_JSON.tmp"
    mv "$COMPOSER_JSON.tmp" "$COMPOSER_JSON"
}

# Main execution
if [ -n "${COMMAND:-}" ]; then
    case "$COMMAND" in
        repository)
            if [ -z "${REPOSITORY:-}" ]; then
                echo "Error: Repository URL required"
                exit 1
            fi
            add_repository "https://github.com/$REPOSITORY"
            ;;
        script)
            if [ -z "${SCRIPT_NAME:-}" ] || [ -z "${SCRIPT_CMD:-}" ]; then
                echo "Error: Script name and command required"
                exit 1
            fi
            add_script "$SCRIPT_NAME" "$SCRIPT_CMD"
            ;;
        *)
            echo "Usage: COMMAND={repository|script} [REPOSITORY=... or SCRIPT_NAME=... SCRIPT_CMD=...] $0"
            echo "  repository: Set REPOSITORY=vendor/package"
            echo "  script: Set SCRIPT_NAME=name SCRIPT_CMD=command"
            exit 1
            ;;
    esac
else
    echo "Usage: COMMAND={repository|script} [REPOSITORY=... or SCRIPT_NAME=... SCRIPT_CMD=...] $0"
    echo "  repository: Set REPOSITORY=vendor/package"
    echo "  script: Set SCRIPT_NAME=name SCRIPT_CMD=command"
    exit 1
fi
